---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This playbook will install the swift services but not sync the ring or keys.

- name: Installation and setup of Swift
  hosts: swift_all
  max_fail_percentage: 20
  user: root
  pre_tasks:
    - name: Use the lxc-openstack aa profile
      lxc_container:
        name: "{{ container_name }}"
        container_config:
          - "lxc.aa_profile=lxc-openstack"
      delegate_to: "{{ physical_host }}"
      when: not is_metal | bool
      register: container_config
      tags:
        - lxc-aa-profile
    - name: Wait for container ssh
      wait_for:
        port: "22"
        delay: "{{ ssh_delay }}"
        search_regex: "OpenSSH"
        host: "{{ ansible_ssh_host }}"
      delegate_to: "{{ physical_host }}"
      when: container_config is defined and container_config | changed
      register: ssh_wait_check
      until: ssh_wait_check | success
      retries: 3
      tags:
        - ssh-wait
    - name: Create log dir
      file:
        path: "{{ item.path }}"
        state: directory
      with_items:
        - { path: "/openstack/log/{{ inventory_hostname }}-swift" }
      when: is_metal | bool
      tags:
        - swift-logs
        - swift-log-dirs
    - name: Create log aggregation links
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: "{{ item.state }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        force: "yes"
      with_items:
        - src: "/openstack/log/{{ inventory_hostname }}-swift"
          dest: "/var/log/swift"
          owner: "syslog"
          group: "syslog"
          state: "link"
      when: is_metal | bool
      tags:
        - swift-logs
    - name: Set swift storage bridge (is_metal)
      set_fact:
        storage_bridge: "{{ 'ansible_' + swift.storage_network | replace('-', '_') }}"
      when:
        - swift.storage_network is defined
        - is_metal | bool
    - name: Set swift storage address (is_metal)
      set_fact:
        storage_address: "{{ hostvars[inventory_hostname][storage_bridge]['ipv4']['address'] }}"
      when:
        - swift.storage_network is defined
        - is_metal | bool
    - name: Set swift storage address (is_metal no storage network)
      set_fact:
        storage_address: "{{ ansible_ssh_host }}"
      when:
        - swift.storage_network is undefined
        - is_metal | bool
    - name: Set swift storage address (container)
      set_fact:
        storage_address: "{{ hostvars[inventory_hostname]['container_networks']['storage_address']['address'] }}"
      when:
        - hostvars[inventory_hostname]['container_networks']['storage_address']['address'] is defined
        - not is_metal | bool
    - name: Set swift storage address (container no storage network)
      set_fact:
        storage_address: "{{ ansible_ssh_host }}"
      when:
        - hostvars[inventory_hostname]['container_networks']['storage_address']['address'] is undefined
        - not is_metal | bool
    - name: Set swift replication bridge (is_metal)
      set_fact:
        replication_bridge: "{{ 'ansible_' + swift.replication_network | replace('-', '_') }}"
      when:
        - swift.replication_network is defined
        - is_metal | bool
    - name: Set swift replication address (is_metal)
      set_fact:
        replication_address: "{{ hostvars[inventory_hostname][replication_bridge]['ipv4']['address'] }}"
      when:
        - swift.replication_network is defined
        - is_metal | bool
    - name: Set swift replication address (is_metal no replication network)
      set_fact:
        replication_address: "{{ storage_address }}"
      when:
        - swift.replication_network is undefined
        - is_metal | bool
    - name: Set swift replication address (container)
      set_fact:
        replication_address: "{{ hostvars[inventory_hostname]['container_networks']['replication_address']['address'] }}"
      when:
        - hostvars[inventory_hostname]['container_networks']['replication_address']['address'] is defined
        - not is_metal | bool
    - name: Set swift replication address (container no replication network)
      set_fact:
        replication_address: "{{ storage_address }}"
      when:
        - hostvars[inventory_hostname]['container_networks']['replication_address']['address'] is undefined
        - not is_metal | bool
    - name: Set swift venv download url for non-ppc64le
      set_fact:
        swift_download_url: "{{ openstack_repo_url }}/venvs/{{ openstack_release }}/{{ ansible_distribution | lower }}/swift-{{ openstack_release }}.tgz"
      when:
        - ansible_architecture != 'ppc64le'
      tags:
        - swift-config
    - name: Set swift venv download url for ppc64le
      set_fact:
        swift_download_url: "{{ openstack_repo_url }}/venvs/{{ openstack_release }}/{{ ansible_distribution | lower }}/swift-{{ openstack_release }}-{{ ansible_architecture }}.tgz"
      when:
        - ansible_architecture == 'ppc64le'
      tags:
        - swift-config

  roles:
    - role: "os_swift"
      swift_venv_tag: "{{ openstack_release }}"
      swift_venv_download_url: "{{ swift_download_url }}"
      swift_storage_address: "{{ storage_address }}"
      swift_replication_address: "{{ replication_address }}"
      swift_do_setup: True
      swift_do_sync: False
      tags:
        - "os-swift"
    - role: "rsyslog_client"
      rsyslog_client_log_rotate_file: swift_log_rotate
      rsyslog_client_log_dir: "/var/log/swift"
      rsyslog_client_config_name: "99-swift-rsyslog-client.conf"
      rsyslog_client_log_files:
        - /var/log/rsyncd.log
      tags:
        - "swift-rsyslog-client"
        - "rsyslog-client"
    - role: "system_crontab_coordination"
      tags:
        - "system-crontab-coordination"
  vars:
    is_metal: "{{ properties.is_metal|default(false) }}"
