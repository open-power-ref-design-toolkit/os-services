---
# Copyright 2016, IBM US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Build new repo packages for a given release
  # Run this on the first ppc64le compute host only
  hosts: compute_all[0]
  gather_facts: true
  user: root
  vars_files:
    - vars/pkvm.yml

  pre_tasks:
    - name: Check for .pip directory
      stat: path=/root/.pip
      register: pip_dir_stat

    - name: Move pip directory
      command: mv /root/.pip /root/backup_.pip
      when: pip_dir_stat.stat.exists

    - name: Load local packages
      debug:
        msg: "Loading Packages"
      with_py_pkgs: "{{ pkg_locations }}"
      register: local_packages
      tags:
        - repo-clone-repos
        - repo-set-requirements
        - repo-get-global-requirements
        - repo-set-requirement-names
        - repo-set-requirement-names-filtered
        - repo-set-constraints
        - repo-build-constraints-file
        - repo-create-venv-archive
        - repo-venv-compress-archive
        - repo-build-venvs
        - repo-create-venv-checksum

  post_tasks:
    - name: Replace pip directory
      command: mv /root/backup_.pip /root/.pip
      when: pip_dir_stat.stat.exists

    - name: Fetch ppc64le repo files from ppc64le machine to the controller node
      fetch:
        src: "{{ repo_build_venv_dir }}/{{ repo_build_release_tag }}/{{ ansible_distribution | lower }}/{{ item }}"
        dest: "/tmp/{{ item }}"
        flat: yes
        fail_on_missing: yes
      with_items:
        - "nova-{{ repo_build_release_tag }}-{{ ansible_architecture }}.tgz"
        - "nova-{{ repo_build_release_tag }}-{{ ansible_architecture }}.checksum"
        - "neutron-{{ repo_build_release_tag }}-{{ ansible_architecture }}.tgz"
        - "neutron-{{ repo_build_release_tag }}-{{ ansible_architecture }}.checksum"
    - name: Get msgpack wheel file name
      shell: "ls -1 {{ repo_build_pool_dir }}/msgpack_python/msgpack_python*.whl"
      register: wheel_filename
    - name: Fetch ppc64le repo wheel files from ppc64le machine to the deployer node
      fetch:
        src: "{{ item }}"
        dest: "/tmp/ppc64le_wheels/"
        flat: yes
        fail_on_missing: yes
      with_items: wheel_filename.stdout_lines

  roles:
    - role: "repo_build"
      repo_build_release_tag: "{{ openstack_release }}"
      repo_build_concurrency: 5
      repo_service_user_name: "root"
      repo_build_service_user_name: "root"
      tags:
        - "repo-build"
  vars:
    pkg_locations:
      - ../ppc_req
      - /etc/ansible/roles/os_nova
      - /etc/ansible/roles/os_neutron
