---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Setup the utility location(s)
  hosts: utility_all
  max_fail_percentage: 20
  user: root
  pre_tasks:

    - include: common-tasks/os-lxc-container-setup.yml

    - include: common-tasks/os-log-dir-setup.yml
      vars:
        log_dirs:
          - src: "/openstack/log/{{ inventory_hostname }}-utility"
            dest: "/var/log/utility"

    - include: common-tasks/package-cache-proxy.yml

    - name: Create log directory (not is_metal)
      file:
        dest: "/var/log/utility"
        state: "directory"
        force: "yes"
      when: not is_metal | bool

  roles:
    - role: "galera_client"
    - role: "pip_install"
      tags:
        - pip
    - role: "openstack_openrc"
      tags:
        - openrc

  post_tasks:
    - name: Update apt sources
      apt:
        update_cache: yes
        cache_valid_time: 600
      register: apt_update
      until: apt_update|success
      retries: 5
      delay: 2
      when: ansible_pkg_mgr == 'apt'

    - name: Install apt packages
      apt:
        pkg: "{{ item }}"
        state: latest
      with_items: "{{ utility_distro_packages | default([]) }}"
      when: ansible_pkg_mgr == 'apt'

    - name: Install yum packages
      yum:
        pkg: "{{ item }}"
        state: latest
      with_items: "{{ utility_distro_packages | default([]) }}"
      when: ansible_pkg_mgr == 'yum'

    - name: Get list of python clients
      shell: "curl -s {{ openstack_repo_url }}/os-releases/{{ openstack_release }}/requirements_absolute_requirements.txt  | grep client | cut -d'=' -f1"
      register: client_list
      run_once: true
      changed_when: false
      tags:
        - always
        - skip_ansible_lint

    - name: Install pip packages
      pip:
        name: "{{ client_list.stdout_lines | union(utility_pip_packages) | join(' ') }}"
        state: latest
        extra_args: "{{ pip_install_options|default('') }}"
      register: install_packages
      until: install_packages|success
      retries: 5
      delay: 2
      with_items: "{{ utility_pip_packages }}"

    - name: Distribute private ssh key
      copy:
        content: "{{ utility_ssh_private_key }}"
        dest: /root/.ssh/id_rsa
        mode: 0600
        owner: root
        group: root
      when: utility_ssh_private_key is defined
  vars:
    is_metal: "{{ properties.is_metal|default(false) }}"
  environment: "{{ deployment_environment_variables | default({}) }}"
  tags:
    - utility
