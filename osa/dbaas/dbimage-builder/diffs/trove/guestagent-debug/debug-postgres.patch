diff --git a/trove/guestagent/datastore/experimental/postgresql/service/process.py b/trove/guestagent/datastore/experimental/postgresql/service/process.py
index 3258293..52564ef 100644
--- a/trove/guestagent/datastore/experimental/postgresql/service/process.py
+++ b/trove/guestagent/datastore/experimental/postgresql/service/process.py
@@ -16,6 +16,8 @@
 import os
 import re
 
+from oslo_log import log as logging
+
 from trove.common import cfg
 from trove.guestagent.common import operating_system
 from trove.guestagent.datastore.experimental.postgresql import pgutil
@@ -23,9 +25,9 @@ from trove.guestagent.datastore.experimental.postgresql.service.status import (
     PgSqlAppStatus)
 from trove.guestagent import guest_log
 
-
 CONF = cfg.CONF
 
+LOG = logging.getLogger(__name__)
 
 class PgSqlProcess(object):
     """Mixin that manages the PgSql process."""
@@ -58,16 +60,19 @@ class PgSqlProcess(object):
         return version_file, version.strip()
 
     def restart(self, context):
+        LOG.debug("restart: state_change_wait_time=%s" % str(CONF.state_change_wait_time))
         PgSqlAppStatus.get().restart_db_service(
             self.SERVICE_CANDIDATES, CONF.state_change_wait_time)
         self.set_guest_log_status(guest_log.LogStatus.Restart_Completed)
 
     def start_db(self, context, enable_on_boot=True, update_db=False):
+        LOG.debug("start_db: state_change_wait_time=%s" % str(CONF.state_change_wait_time))
         PgSqlAppStatus.get().start_db_service(
             self.SERVICE_CANDIDATES, CONF.state_change_wait_time,
             enable_on_boot=enable_on_boot, update_db=update_db)
 
     def stop_db(self, context, do_not_start_on_reboot=False, update_db=False):
+        LOG.debug("stop_db: state_change_wait_time=%s" % str(CONF.state_change_wait_time))
         PgSqlAppStatus.get().stop_db_service(
             self.SERVICE_CANDIDATES, CONF.state_change_wait_time,
             disable_on_boot=do_not_start_on_reboot, update_db=update_db)
diff --git a/trove/guestagent/datastore/experimental/postgresql/service/status.py b/trove/guestagent/datastore/experimental/postgresql/service/status.py
index 826f44b..4937e1b 100644
--- a/trove/guestagent/datastore/experimental/postgresql/service/status.py
+++ b/trove/guestagent/datastore/experimental/postgresql/service/status.py
@@ -37,13 +37,18 @@ class PgSqlAppStatus(service.BaseDbStatus):
         try:
             # Any query will initiate a new database connection.
             pgutil.psql("SELECT 1")
+            LOG.debug("DB is running")
             return instance.ServiceStatuses.RUNNING
         except psycopg2.OperationalError:
+            LOG.debug("psycopg2.OperationalError")
             return instance.ServiceStatuses.SHUTDOWN
         except utils.Timeout:
+            LOG.debug("timeout")
             return instance.ServiceStatuses.BLOCKED
-        except Exception:
+        except Exception as e:
+            LOG.debug("Unknown: e=%s"% str(e))
             LOG.exception(_("Error getting Postgres status."))
             return instance.ServiceStatuses.CRASHED
 
+        LOG.debug("Never status")
         return instance.ServiceStatuses.SHUTDOWN
