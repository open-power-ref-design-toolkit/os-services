diff --git a/trove/guestagent/datastore/experimental/postgresql/manager.py b/trove/guestagent/datastore/experimental/postgresql/manager.py
index 33a1d47..d71189c 100644
--- a/trove/guestagent/datastore/experimental/postgresql/manager.py
+++ b/trove/guestagent/datastore/experimental/postgresql/manager.py
@@ -77,6 +77,8 @@ class Manager(manager.Manager):
             self.GUEST_LOG_DEFS_GENERAL_LABEL, owner,
             datastore_dir=self.app.pgsql_log_dir)
         general_log_dir, general_log_filename = os.path.split(general_log_file)
+        LOG.debug("datastore_log_defs: general_log_file = %s, long_query_time=%s" %
+                  (general_log_file, str(long_query_time)))
         return {
             self.GUEST_LOG_DEFS_GENERAL_LABEL: {
                 self.GUEST_LOG_TYPE_LABEL: guest_log.LogType.USER,
@@ -209,6 +211,10 @@ class Manager(manager.Manager):
     def do_prepare(self, context, packages, databases, memory_mb, users,
                    device_path, mount_point, backup_info, config_contents,
                    root_password, overrides, cluster_config, snapshot):
+
+        LOG.debug("do_prepare: device_path=%s, packages=%s, backup_info=%s, cluster_config=%s" %
+                  (device_path, packages, str(backup_info), str(cluster_config)))
+
         self.app.install(context, packages)
         LOG.debug("Waiting for database first boot.")
         if (self.app.status.wait_for_real_status_to_change_to(
@@ -224,6 +230,26 @@ class Manager(manager.Manager):
             if os.path.exists(mount_point):
                 device.migrate_data(mount_point)
             device.mount(mount_point)
+
+        # Provide updates for 9.5 and 9.6
+        version = self.pg_version[1]
+        if version not in ('9.3', '9.4'):
+            LOG.debug("do_prepare: remove deprecated checkpoint_segments for Postgresql %s" % version)
+            config_contents = '#checkpoint_segments'.join(config_contents.split('checkpoint_segments'))
+            # Commenting out wal_level.  Setting initial value to quoted minimal
+            config_contents = '#wal_level ='.join(config_contents.split('wal_level ='))
+            config_contents = config_contents.split('\n')
+            config_contents.append('wal_level = \'minimal\'')
+            config_contents.append('ssl = off')
+            config_contents.append('max_connections = 100')
+            config_contents.append('dynamic_shared_memory_type = sysv')
+            config_contents.append('log_line_prefix = \'%t [%p-%l] %q%u@%d \'')
+            config_contents.append('log_timezone = \'UTC\'')
+            statsDir = 'stats_temp_directory = \'/var/run/postgresql/%s-main.pg_stat_tmp\'' % version
+            config_contents.append(statsDir)
+            config_contents.append('timezone = \'UTC\'')
+            config_contents = '\n'.join(config_contents)
+
         self.configuration_manager.save_configuration(config_contents)
         self.app.apply_initial_guestagent_configuration()

