---

# This task is invoked during the invocation of the playbook below:
#
# ansible-playbook -i host_file dbimage-make.yml -u ubuntu -c ssh
#
# This is invoked on a controller node as ubuntu and then
# becomes root before any of these tasks are run

- name: fetch trove files
  fetch:
    src: "/etc/trove/trove-guestagent.conf"
    dest: "{{ src_trove }}/trove-guestagent.conf"
    flat: yes

- name: Set trove venv token
  set_fact:
    trove_venv: ".venv"

- debug: var=trove_venv

- name: Get controller's public key
  slurp:
    src: "~/.ssh/id_rsa.pub"
  register: public_key
  failed_when: false

- name: Set controller's public key
  set_fact:
    controller_pub_key: "{{ public_key.content | b64decode }}"
  when: public_key | success

# Get user specified public key from Nova that will be placed inside the guest image

- block:
  - name: Get public key named {{ cloudKey }}
    shell: >-
      /bin/bash -c '
      source /home/ubuntu/openrc;
      nova keypair-show {{ cloudKey }}'
    register: keypair_show
    failed_when: false

  when: cloudKey != ''

- block:
  - name: Get list of registered ssh keys
    shell: >-
      /bin/bash -c '
      source /home/ubuntu/openrc;
      nova keypair-list'
    register: keypair_list
    failed_when: false

  - name: List registered key pairs
    debug: var=keypair_list['stdout_lines']

  - name: Halt on invalid argument -k <key-name>.  Valid key pairs are listed above
    fail:
      msg: "Invalid user specified key-pair name is {{ cloudKey }}"

  when:
    - cloudKey != ''
    - keypair_show['rc']

- name: Set cloud public key
  set_fact:
    cloud_pub_key: "{{ item.split('Public key: ', 1)[-1] }}"
  with_items: "{{ keypair_show['stdout_lines'] | default([]) }}"
  when:
    - cloudKey != ''
    - cloud_pub_key is not defined
    - "'Public key: ' in item"
